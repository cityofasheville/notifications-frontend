version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.0
  aws-cli: circleci/aws-cli@0.1.19

defaults: &defaults
  docker:
    - image: circleci/python:3.7.1
jobs:
  build:
    docker:
      - image: circleci/node:10 # must be no higher than 8.6 for other front ends
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: npm install
      - run: npm run build
      - save_cache:
          paths:
            - ./node_modules
            - ./build # make sure this is updated for each deployment
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run build
  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - aws-s3/sync:
         # aws-access-key-id: AWS_ACCESS_KEY_ID
         # aws-secret-access-key: AWS_SECRET_ACCESS_KEY
         # aws-region: AWS_DEFAULT_REGION
          from: ./build
          to: 's3://${S3_DEPLOY_BUCKET}'
          arguments: --acl public-read
      - aws-cli/install
      - run:
          # invalidate the cloudfront distribution
          name: Create AWS CloudFront Invalidation
          command: |
            aws cloudfront create-invalidation --distribution-id AWS_CLOUDFRONT_DIST --paths /*

  deploy-prod:
    <<: *defaults
    steps:
      - checkout
      - aws-s3/sync:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
          from: ./build
          to: 's3://${S3_DEPLOY_BUCKET}'
          arguments: |
            --acl public-read
      - aws-cli/install
      - run:
          # invalidate the cloudfront distribution
          name: Create AWS CloudFront Invalidation
          command: |
            aws cloudfront create-invalidation --distribution-id AWS_CLOUDFRONT_DIST --paths /*
workflows:
  build-deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: development
          context: notify-front-dev
      - hold:
          type: approval
      - build-prod:
          requires:
            - build
            - hold
          filters:
            branches:
              only:  master
          context: notify-front-prod
