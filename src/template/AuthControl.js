/* **********************************************************************************************
  WARNING: DO NOT EDIT this file except from inside the react-starter-template repository. Changes made to this file inside child repos will NOT be reflected in the parent source template repository, and will generate code conflicts.
*********************************************************************************************** */
import React from 'react';
import gql from 'graphql-tag';
import { graphql } from 'react-apollo';
import { withRouter } from 'react-router-dom';
import config from 'app/config';
import { withLanguage } from 'template/LanguageContext';
import { withUser } from 'template/UserContext';

const GET_USER_INFO = gql`
  query user {
    user {
      id,
      name,
      email,
      position,
      department,
      division,
      supervisor_id,
      supervisor,
      supervisor_email,
    }
  }
`;

const saveLocationThenLogin = (location) => {
  localStorage.setItem('preLoginPathname', location.pathname);
  localStorage.setItem('preLoginSearch', location.search);
  window.location = config.loginURL;
};

const getText = (loggedIn, language) => {
  if (loggedIn) {
    for (let i = 0; i < config.logoutText.translations.length; i += 1) {
      if (config.logoutText.translations[i].language === language) {
        return config.logoutText.translations[i].text;
      }
    }
    return config.logoutText.defaultText;
  }
  for (let i = 0; i < config.loginText.translations.length; i += 1) {
    if (config.loginText.translations[i].language === language) {
      return config.loginText.translations[i].text;
    }
  }
  return config.loginText.defaultText;
};

class AuthControl extends React.Component {
  componentDidUpdate() {
    const loggedIn = localStorage.getItem('loggedIn') === 'true';
    const skipping = !loggedIn || (loggedIn && this.props.user.email !== null);
    if (!skipping && this.props.data !== undefined) {
      if (this.props.data.user !== undefined) {
        this.props.user.setUserInfo(this.props.data.user);
      }
    }
  }

  render() {
    const loggedIn = localStorage.getItem('loggedIn') === 'true';
    if (loggedIn) {
      return (
        <a href={config.logoutURL}>{getText(true, this.props.language.language)}</a>
      );
    }
    return (
      <a
        href={config.loginURL}
        onClick={() => saveLocationThenLogin(this.props.location)}
      >
        {getText(false, this.props.language.language)}
      </a>
    );
  }
}

export default withRouter(withUser(withLanguage(graphql(GET_USER_INFO, {
  skip: ownProps => (
    localStorage.getItem('loggedIn') !== 'true'
      || (localStorage.getItem('loggedIn') === 'true' && ownProps.user.email !== null)),
})(AuthControl))));
